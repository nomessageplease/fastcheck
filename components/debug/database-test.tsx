"use client"

import { useState } from "react"
import { supabase } from "@/lib/supabase/client"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { useToast } from "@/hooks/use-toast"

export function DatabaseTest() {
  const [loading, setLoading] = useState(false)
  const [results, setResults] = useState<string[]>([])
  const { toast } = useToast()

  const addResult = (message: string) => {
    setResults((prev) => [...prev, `${new Date().toLocaleTimeString()}: ${message}`])
  }

  const testConnection = async () => {
    setLoading(true)
    setResults([])

    try {
      addResult("üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...")

      // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
      const { data: userData, error: authError } = await supabase.auth.getUser()
      if (authError) {
        addResult(`‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: ${authError.message}`)
        return
      }

      if (!userData.user) {
        addResult("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω")
        return
      }

      addResult(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: ${userData.user.id}`)

      // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–∞–º
      const { data: projects, error: projectsError } = await supabase.from("projects").select("*").limit(1)

      if (projectsError) {
        addResult(`‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ projects: ${projectsError.message}`)
      } else {
        addResult(`‚úÖ –î–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ projects: –Ω–∞–π–¥–µ–Ω–æ ${projects?.length || 0} –∑–∞–ø–∏—Å–µ–π`)
      }

      const { data: tasks, error: tasksError } = await supabase.from("tasks").select("*").limit(1)

      if (tasksError) {
        addResult(`‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ tasks: ${tasksError.message}`)
      } else {
        addResult(`‚úÖ –î–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ tasks: –Ω–∞–π–¥–µ–Ω–æ ${tasks?.length || 0} –∑–∞–ø–∏—Å–µ–π`)
      }

      // 3. –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç
      const testProjectData = {
        user_id: userData.user.id,
        name: "–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç " + Date.now(),
        description: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç",
        color_icon: "#3B82F6",
        start_date: new Date().toISOString(),
        planned_finish: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),
      }

      const { data: createdProject, error: createProjectError } = await supabase
        .from("projects")
        .insert([testProjectData])
        .select()
        .single()

      if (createProjectError) {
        addResult(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞: ${createProjectError.message}`)
        addResult(`üìù –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: ${JSON.stringify(createProjectError, null, 2)}`)
        return
      }

      addResult(`‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ: ${createdProject.id}`)

      // 4. –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É
      const testTaskData = {
        user_id: userData.user.id,
        project_id: createdProject.id,
        title: "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ " + Date.now(),
        description: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞",
        start_date: new Date().toISOString(),
        due_date: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),
        is_urgent: false,
        status: "waiting",
      }

      const { data: createdTask, error: createTaskError } = await supabase
        .from("tasks")
        .insert([testTaskData])
        .select()
        .single()

      if (createTaskError) {
        addResult(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏: ${createTaskError.message}`)
        addResult(`üìù –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: ${JSON.stringify(createTaskError, null, 2)}`)
      } else {
        addResult(`‚úÖ –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ: ${createdTask.id}`)
      }

      // 5. –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
      if (createdTask) {
        await supabase.from("tasks").delete().eq("id", createdTask.id)
        addResult("üßπ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ —É–¥–∞–ª–µ–Ω–∞")
      }

      await supabase.from("projects").delete().eq("id", createdProject.id)
      addResult("üßπ –¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç —É–¥–∞–ª–µ–Ω")

      addResult("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")

      toast({
        title: "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ",
        description: "–í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ",
      })
    } catch (error) {
      addResult(`üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: ${error instanceof Error ? error.message : String(error)}`)
      console.error("Database test error:", error)
    } finally {
      setLoading(false)
    }
  }

  return (
    <Card className="w-full max-w-2xl">
      <CardHeader>
        <CardTitle>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        <Button onClick={testConnection} disabled={loading} className="w-full">
          {loading ? "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ..." : "–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç"}
        </Button>

        {results.length > 0 && (
          <div className="bg-gray-100 p-4 rounded-lg max-h-96 overflow-y-auto">
            <h3 className="font-medium mb-2">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</h3>
            <div className="space-y-1 text-sm font-mono">
              {results.map((result, index) => (
                <div key={index} className="whitespace-pre-wrap">
                  {result}
                </div>
              ))}
            </div>
          </div>
        )}
      </CardContent>
    </Card>
  )
}
